#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef IDENTYFACE_SWIFT_H
#define IDENTYFACE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="IdentyFace",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif





@class NSNumber;
@class UIColor;
enum antispoofFaceThreshold : NSInteger;
@class NSString;
@class UIViewController;
@class UIImage;
@class NSDate;

SWIFT_CLASS_NAMED("IdentyFaceFramework")
@interface IdentyFaceFramework : NSObject
@property (nonatomic) BOOL isAntiSpoofCheck;
@property (nonatomic, strong) UIColor * _Null_unspecified plainSolidColor;
@property (nonatomic, strong) UIColor * _Null_unspecified oval_transparent_innerborder;
@property (nonatomic, strong) UIColor * _Null_unspecified textBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified startColor;
@property (nonatomic, strong) UIColor * _Null_unspecified middleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified endColor;
@property (nonatomic) NSInteger setBase64EncodingFlag;
@property (nonatomic) BOOL isDemo;
@property (nonatomic) BOOL isAssistedMode;
@property (nonatomic) BOOL isNeedShowTraining;
@property (nonatomic) enum antispoofFaceThreshold SetASSecLevel;
@property (nonatomic, strong) UIColor * _Null_unspecified introScreenStartColor;
@property (nonatomic, strong) UIColor * _Null_unspecified introScreenMiddleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified introScreenEndColor;
@property (nonatomic) BOOL displayResult;
@property (nonatomic, copy) NSString * _Nullable encryptionKey;
@property (nonatomic, strong) UIViewController * _Null_unspecified customQualityViewController;
@property (nonatomic, strong) UIViewController * _Null_unspecified customResultViewController;
@property (nonatomic, strong) UIViewController * _Null_unspecified customIntroViewController;
@property (nonatomic) BOOL isCustomQualityScreen;
@property (nonatomic) BOOL isCustomResultScreen;
@property (nonatomic) BOOL isCustomIntroScreen;
@property (nonatomic, copy) void (^ _Nullable moveToCamera)(void);
@property (nonatomic, copy) void (^ _Nullable moveBack)(void);
@property (nonatomic, copy) void (^ _Nullable closeAction)(void);
@property (nonatomic, copy) void (^ _Nullable retakeAction)(void);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable captureResult)(void);
@property (nonatomic) BOOL isInitialize;
@property (nonatomic) BOOL isLogEnabled;
@property (nonatomic, strong) UIImage * _Nullable backImage;
@property (nonatomic) BOOL isLicenseCheck;
- (NSDate * _Nullable)getLicenseExpiryDate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWith:(NSString * _Nullable)licensePath localizablePath:(NSString * _Nullable)localizablePath table:(NSString * _Nullable)table OBJC_DESIGNATED_INITIALIZER;
- (void)createLogFileWithFileName:(NSString * _Nonnull)fileName :(BOOL)isLog;
- (void)setTemplates:(NSArray<NSNumber *> * _Nonnull)templates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




typedef SWIFT_ENUM(NSInteger, Oval, open) {
  OvalRoundedRect = 0,
};

typedef SWIFT_ENUM(NSInteger, RecordPosition, open) {
  RecordPositionUNKNOWN = 0,
  RecordPositionRIGHT_THUMB = 1,
  RecordPositionRIGHT_INDEX_FINGER = 2,
  RecordPositionRIGHT_MIDDLE_FINGER = 3,
  RecordPositionRIGHT_RING_FINGER = 4,
  RecordPositionRIGHT_LITTLE_FINGER = 5,
  RecordPositionLEFT_THUMB = 6,
  RecordPositionLEFT_INDEX_FINGER = 7,
  RecordPositionLEFT_MIDDLE_FINGER = 8,
  RecordPositionLEFT_RING_FINGER = 9,
  RecordPositionLEFT_LITTLE_FINGER = 10,
  RecordPositionFACE = 11,
};

typedef SWIFT_ENUM(NSInteger, RecordType, open) {
  RecordTypeTYPE_1 = 1,
  RecordTypeTYPE_2 = 2,
};

typedef SWIFT_ENUM(NSInteger, Type_1, open) {
  Type_1TYPE1_RECORD_HEADER = 1,
  Type_1VERSION_NUMBER = 2,
  Type_1TYPE_OF_TRANSACTION = 4,
  Type_1DATE = 5,
  Type_1DESTINATION_AGENCY_ID = 7,
  Type_1ORIGINATING_AGENCY_ID = 8,
  Type_1TRANSACTION_CONTROL_NUM = 9,
  Type_1NATIVE_SCAN_RESOLUTION = 11,
  Type_1NOMINAL_TRANSMIT_RESOLUTION = 12,
};

typedef SWIFT_ENUM(NSInteger, Type_2, open) {
  Type_2TYPE2_RECORD_HEADER = 1,
  Type_2IMAGE_DESIGNATION_CHARCTER = 2,
};















typedef SWIFT_ENUM(NSInteger, antispoofFaceThreshold, open) {
  antispoofFaceThresholdLOW = 1,
  antispoofFaceThresholdMEDIUM = 2,
  antispoofFaceThresholdBALANCEDHIGH = 3,
  antispoofFaceThresholdHIGH = 4,
  antispoofFaceThresholdBALANCEDVERYHIGH = 5,
  antispoofFaceThresholdVERY_HIGH = 6,
  antispoofFaceThresholdNONE = 7,
};

typedef SWIFT_ENUM(NSInteger, facebase64encoding, open) {
  facebase64encodingDefault = 0,
  facebase64encodingNO_CLOSE = 1,
  facebase64encodingNO_PADDING = 2,
  facebase64encodingNO_WRAP = 3,
  facebase64encodingURL_SAFE = 4,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
#ifndef IDENTYFACE_SWIFT_H
#define IDENTYFACE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="IdentyFace",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif





@class NSNumber;
@class UIColor;
enum antispoofFaceThreshold : NSInteger;
@class NSString;
@class UIViewController;
@class UIImage;
@class NSDate;

SWIFT_CLASS_NAMED("IdentyFaceFramework")
@interface IdentyFaceFramework : NSObject
@property (nonatomic) BOOL isAntiSpoofCheck;
@property (nonatomic, strong) UIColor * _Null_unspecified plainSolidColor;
@property (nonatomic, strong) UIColor * _Null_unspecified oval_transparent_innerborder;
@property (nonatomic, strong) UIColor * _Null_unspecified textBackgroundColor;
@property (nonatomic, strong) UIColor * _Null_unspecified startColor;
@property (nonatomic, strong) UIColor * _Null_unspecified middleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified endColor;
@property (nonatomic) NSInteger setBase64EncodingFlag;
@property (nonatomic) BOOL isDemo;
@property (nonatomic) BOOL isAssistedMode;
@property (nonatomic) BOOL isNeedShowTraining;
@property (nonatomic) enum antispoofFaceThreshold SetASSecLevel;
@property (nonatomic, strong) UIColor * _Null_unspecified introScreenStartColor;
@property (nonatomic, strong) UIColor * _Null_unspecified introScreenMiddleColor;
@property (nonatomic, strong) UIColor * _Null_unspecified introScreenEndColor;
@property (nonatomic) BOOL displayResult;
@property (nonatomic, copy) NSString * _Nullable encryptionKey;
@property (nonatomic, strong) UIViewController * _Null_unspecified customQualityViewController;
@property (nonatomic, strong) UIViewController * _Null_unspecified customResultViewController;
@property (nonatomic, strong) UIViewController * _Null_unspecified customIntroViewController;
@property (nonatomic) BOOL isCustomQualityScreen;
@property (nonatomic) BOOL isCustomResultScreen;
@property (nonatomic) BOOL isCustomIntroScreen;
@property (nonatomic, copy) void (^ _Nullable moveToCamera)(void);
@property (nonatomic, copy) void (^ _Nullable moveBack)(void);
@property (nonatomic, copy) void (^ _Nullable closeAction)(void);
@property (nonatomic, copy) void (^ _Nullable retakeAction)(void);
@property (nonatomic, copy) NSString * _Nonnull (^ _Nullable captureResult)(void);
@property (nonatomic) BOOL isInitialize;
@property (nonatomic) BOOL isLogEnabled;
@property (nonatomic, strong) UIImage * _Nullable backImage;
@property (nonatomic) BOOL isLicenseCheck;
- (NSDate * _Nullable)getLicenseExpiryDate SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWith:(NSString * _Nullable)licensePath localizablePath:(NSString * _Nullable)localizablePath table:(NSString * _Nullable)table OBJC_DESIGNATED_INITIALIZER;
- (void)createLogFileWithFileName:(NSString * _Nonnull)fileName :(BOOL)isLog;
- (void)setTemplates:(NSArray<NSNumber *> * _Nonnull)templates;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




typedef SWIFT_ENUM(NSInteger, Oval, open) {
  OvalRoundedRect = 0,
};

typedef SWIFT_ENUM(NSInteger, RecordPosition, open) {
  RecordPositionUNKNOWN = 0,
  RecordPositionRIGHT_THUMB = 1,
  RecordPositionRIGHT_INDEX_FINGER = 2,
  RecordPositionRIGHT_MIDDLE_FINGER = 3,
  RecordPositionRIGHT_RING_FINGER = 4,
  RecordPositionRIGHT_LITTLE_FINGER = 5,
  RecordPositionLEFT_THUMB = 6,
  RecordPositionLEFT_INDEX_FINGER = 7,
  RecordPositionLEFT_MIDDLE_FINGER = 8,
  RecordPositionLEFT_RING_FINGER = 9,
  RecordPositionLEFT_LITTLE_FINGER = 10,
  RecordPositionFACE = 11,
};

typedef SWIFT_ENUM(NSInteger, RecordType, open) {
  RecordTypeTYPE_1 = 1,
  RecordTypeTYPE_2 = 2,
};

typedef SWIFT_ENUM(NSInteger, Type_1, open) {
  Type_1TYPE1_RECORD_HEADER = 1,
  Type_1VERSION_NUMBER = 2,
  Type_1TYPE_OF_TRANSACTION = 4,
  Type_1DATE = 5,
  Type_1DESTINATION_AGENCY_ID = 7,
  Type_1ORIGINATING_AGENCY_ID = 8,
  Type_1TRANSACTION_CONTROL_NUM = 9,
  Type_1NATIVE_SCAN_RESOLUTION = 11,
  Type_1NOMINAL_TRANSMIT_RESOLUTION = 12,
};

typedef SWIFT_ENUM(NSInteger, Type_2, open) {
  Type_2TYPE2_RECORD_HEADER = 1,
  Type_2IMAGE_DESIGNATION_CHARCTER = 2,
};















typedef SWIFT_ENUM(NSInteger, antispoofFaceThreshold, open) {
  antispoofFaceThresholdLOW = 1,
  antispoofFaceThresholdMEDIUM = 2,
  antispoofFaceThresholdBALANCEDHIGH = 3,
  antispoofFaceThresholdHIGH = 4,
  antispoofFaceThresholdBALANCEDVERYHIGH = 5,
  antispoofFaceThresholdVERY_HIGH = 6,
  antispoofFaceThresholdNONE = 7,
};

typedef SWIFT_ENUM(NSInteger, facebase64encoding, open) {
  facebase64encodingDefault = 0,
  facebase64encodingNO_CLOSE = 1,
  facebase64encodingNO_PADDING = 2,
  facebase64encodingNO_WRAP = 3,
  facebase64encodingURL_SAFE = 4,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
